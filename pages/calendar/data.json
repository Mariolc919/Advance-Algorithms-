
{
  "title":"Calendar",
  "content":" LEC # TOPICS KEY DATES 1 Course Introduction\nFibonacci Heaps 2 MST\nPersistent Data Structures 3 Splay Trees 4 Splay Trees (cont.)\nSuffix Trees\nTries Problem set 1 due 5 Suffix Trees (cont.)\nTries (cont.)\nDial\u0026rsquo;s Algorithm 6 Dijkstra\u0026rsquo;s Algorithm\nVan Emde Boas Queues Problem set 2 due 7 Van Emde Boas Queues (cont.)\nHashing 8 2-Level Hashing\nNetwork Flows 9 Network Flows: Augmenting Paths, Maximum Augmenting Paths, Scaling Problem set 3 due 10 Reductions between Flow Problems\nBipartite Matching\nShortest Augmenting Path\nBlocking Flows 11 Blocking Flows (cont.) Recitation Topics: Dynamic Trees, Push-Relabel Max-Flow Algorithm 12 Min-Cost Flows Problem set 4 due 13 Min-Cost Flows (cont.)\nLinear Programming Problem set 5 due 14 Linear Programming (cont.)\nStructure of Optima\nWeak Duality 15 Linear Programming (cont.)\nStrong Duality Recitation Topic: Simplex Problem set 6 due 16 Linear Programming (cont.)\nComplementary Slackness\nAlgorithms: Simplex, Ellipsoid 17 Linear Programming (cont.)\nAlgorithms: Interior Point\nNP-hard problems Problem set 7 due two days after Lec #17 18 Approximation Algorithms 19 4/3-Approximation for TSP 20 Relaxations\nDirected TSP Problem set 8 due 21 Randomized Rounding\nChernoff Bound\nFixed Parameter Tractability\nKernelization 22 Online Algorithms (Ski Rental, Load Balancing, Paging) Problem set 9 due 23 Randomized Online Algorithms (Adversaries, Fiat\u0026rsquo;s Marking Algorithm, Potential Functions, Yao\u0026rsquo;s Minimax Principle) 24 K-Server Problem\nDouble-Coverage Algorithm\nComputational Geometry Introduction (Orthogonal Range Search) Problem set 10 due 25 Sweep Algorithms (Convex Hull, Segment Intersection, Voronoi Diagrams) 26 Sweep Algorithms (Voronoi Diagrams)\nRandomized Incremental Constructions\nBackwards Analysis\nLinear Programming in Fixed Dimension Problem set 11 due two days after Lec #26 27 (Optional Material) External Memory Algorithms Problem set 12, problem 1 due 28 (Optional Material) Cache Oblivious Algorithms: Matrix Multiplication, Linked Lists, Median 29 (Optional Material) Cache Oblivious Algorithms: Search\nStreaming Model Rest of problem set 12 due three days after Lec #29 "}


